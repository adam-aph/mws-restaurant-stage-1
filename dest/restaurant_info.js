class DBHelper{static get PORT(){return 1337}static get DATABASE_URL(){return`http://localhost:${DBHelper.PORT}/restaurants`}static getDatabaseUrlOne(e){return`http://localhost:${DBHelper.PORT}/restaurants/${e}`}static getDatabaseUrlOneReviews(e){return`http://localhost:${DBHelper.PORT}/reviews/?restaurant_id=${e}`}static get DATABASE_GET_ALL_FAVORITES(){return`http://localhost:${DBHelper.PORT}/restaurants/?is_favorite=true`}static get DATABASE_SUBMIT_REVIEW(){return`http://localhost:${DBHelper.PORT}/reviews`}static setDatabaseUrlOneFavorite(e,t){return`http://localhost:${DBHelper.PORT}/restaurants/${e}/?is_favorite=${t}`}static fetchRestaurants(e){let t=new XMLHttpRequest;t.open("GET",DBHelper.DATABASE_URL),t.onload=(()=>{if(200===t.status){const n=JSON.parse(t.responseText);e(null,n)}else{const n=`Request failed. Returned status of ${t.status}`;e(n,null)}}),t.send()}static fetchOneRestaurant(e,t){let n=new XMLHttpRequest;n.open("GET",DBHelper.getDatabaseUrlOne(e)),n.onload=(()=>{if(200===n.status){const e=JSON.parse(n.responseText);e?t(null,e):t("Restaurant does not exist",null)}else{const e=`Request failed. Returned status of ${n.status}`;t(e,null)}}),n.send()}static fetchOneRestaurantReviews(e,t){let n=new XMLHttpRequest;n.open("GET",DBHelper.getDatabaseUrlOneReviews(e)),n.onload=(()=>{if(200===n.status){const e=JSON.parse(n.responseText);e?t(null,e):t("Reviews do not exist",null)}else{const e=`Request failed. Returned status of ${n.status}`;t(e,null)}}),n.send()}static fetchRestaurantByCuisine(e,t){DBHelper.fetchRestaurants((n,a)=>{if(n)t(n,null);else{const n=a.filter(t=>t.cuisine_type==e);t(null,n)}})}static fetchRestaurantByNeighborhood(e,t){DBHelper.fetchRestaurants((n,a)=>{if(n)t(n,null);else{const n=a.filter(t=>t.neighborhood==e);t(null,n)}})}static fetchRestaurantByCuisineAndNeighborhood(e,t,n){DBHelper.fetchRestaurants((a,r)=>{if(a)n(a,null);else{let a=r;"all"!=e&&(a=a.filter(t=>t.cuisine_type==e)),"all"!=t&&(a=a.filter(e=>e.neighborhood==t)),n(null,a)}})}static fetchNeighborhoods(e){DBHelper.fetchRestaurants((t,n)=>{if(t)e(t,null);else{const t=n.map((e,t)=>n[t].neighborhood),a=t.filter((e,n)=>t.indexOf(e)==n);e(null,a)}})}static fetchCuisines(e){DBHelper.fetchRestaurants((t,n)=>{if(t)e(t,null);else{const t=n.map((e,t)=>n[t].cuisine_type),a=t.filter((e,n)=>t.indexOf(e)==n);e(null,a)}})}static urlForRestaurant(e){return`./restaurant.html?id=${e.id}`}static imageSrcSetUrlForRestaurant(e){return`/img2/${e.id}`+"-300_small.webp 300w, "+`/img/${e.id}`+".webp 600w"}static imageSizesUrlForRestaurant(e){return"(max-width: 400px) 300px, 600px"}static imageSrcUrlForRestaurant(e){return`/img2/${e.id}`+"-300_small.webp"}static imageAltDescForRestaurant(e){return`Restaurant: ${e.name} of ${e.cuisine_type} cuisine type`}static mapMarkerForRestaurant(e,t){return new google.maps.Marker({position:e.latlng,title:e.name,url:DBHelper.urlForRestaurant(e),map:t,animation:google.maps.Animation.DROP})}}let restaurant;var map;function check_empty(){let e=document.getElementById("name").value,t=document.getElementById("rating").value,n=document.getElementById("msg").value,a=document.getElementById("favorite").checked;""==e||""==t||""==n?alert("Fill All Fields !"):t<1||t>6?alert("Rating: 1-6 !"):(submit_form(e,t,n,a),div_hide())}function div_show(){document.getElementById("name").value="",document.getElementById("favorite").checked="true"===self.restaurant.is_favorite,document.getElementById("rating").value="",document.getElementById("msg").value="",document.getElementById("reviewform").style.display="block"}function div_hide(){document.getElementById("reviewform").style.display="none"}function escapeUnicode(e){return e.replace(/[^\0-~]/g,function(e){return"&#x"+("0000"+e.charCodeAt().toString(16)).slice(-4)+";"})}function generateUUID(){var e=(new Date).getTime();return"undefined"!=typeof performance&&"function"==typeof performance.now&&(e+=performance.now()),"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(t){var n=(e+16*Math.random())%16|0;return e=Math.floor(e/16),("x"===t?n:3&n|8).toString(16)})}function sendMessageToSW(e){return new Promise(function(t,n){var a=new MessageChannel;a.port1.onmessage=function(e){e.data.error?n(e.data.error):t(e.data)},navigator.serviceWorker.controller.postMessage(e,[a.port2])})}function sendPostponedMsg(e,t,n,a){const r=generateUUID();addReviewsHTMLOffline(t,n,a,r),console.log("New sendPostponedMsg uuid: "+r),sendMessageToSW({type:"review",uuid:r,url:DBHelper.DATABASE_SUBMIT_REVIEW,options:{method:"POST",headers:{"Content-Type":"application/json;charset=UTF-8"},body:{restaurant_id:e,name:t,rating:n,comments:a}}}).then(function(e){updateReviewsHTMLOffline(t,n,a,r,e.updatedAt)}).catch(function(e){console.log(e)})}function sendPostponedFavMsg(e,t){const n=generateUUID();console.log("New sendPostponedFavMsg uuid: "+n),sendMessageToSW({type:"favorite",uuid:n,url:DBHelper.setDatabaseUrlOneFavorite(e,t),options:{method:"POST",headers:{"Content-Type":"application/json;charset=UTF-8"}}}).then(function(e){console.log("Updating updateRestaurantTitleHTML fav: "+t),updateRestaurantTitleHTML(t)}).catch(function(e){console.log(e)})}function submit_review(e,t,n,a){let r=new XMLHttpRequest;r.open("POST",DBHelper.DATABASE_SUBMIT_REVIEW),r.setRequestHeader("Content-Type","application/json;charset=UTF-8"),r.onload=(()=>{if(200===r.status||201===r.status){var s=JSON.parse(r.responseText);addReviewsHTML(s),DBHelper.fetchOneRestaurantReviews(e,(e,t)=>{self.restaurant.reviews=t})}else alert("Submit Error: "+r.status+"\nYour review will be re-submitted automatically later"),sendPostponedMsg(e,t,n,a)}),r.onerror=(()=>{alert("Submit Error: "+r.status+"\nYour review will be re-submitted automatically later"),sendPostponedMsg(e,t,n,a)}),r.send(JSON.stringify({restaurant_id:e,name:t,rating:n,comments:a}))}function submit_favorite(e,t){let n=new XMLHttpRequest;n.open("POST",DBHelper.setDatabaseUrlOneFavorite(e,t)),n.setRequestHeader("Content-Type","application/json;charset=UTF-8"),n.onload=(()=>{200===n.status||201===n.status?DBHelper.fetchOneRestaurant(e,(e,n)=>{self.restaurant=n,n?updateRestaurantTitleHTML(t):console.error(e)}):sendPostponedFavMsg(e,t)}),n.onerror=(()=>{sendPostponedFavMsg(e,t)}),n.send()}function submit_form(e,t,n,a){const r=getParameterByName("id");submit_review(r,e,t,n),a!=("true"===self.restaurant.is_favorite)&&submit_favorite(r,a)}window.initMap=(()=>{fetchRestaurantFromURL((e,t)=>{e?console.error(e):(self.map=new google.maps.Map(document.getElementById("map"),{zoom:16,center:t.latlng,scrollwheel:!1}),fillBreadcrumb(),document.getElementById("map").style.display="inline",DBHelper.mapMarkerForRestaurant(self.restaurant,self.map),self.map.addListener("tilesloaded",function(){var e=document.querySelectorAll("#map a");[].forEach.call(e,function(e){e.setAttribute("tabindex","-1")})}))})}),fetchRestaurantFromURL=(e=>{if(self.restaurant)return void e(null,self.restaurant);const t=getParameterByName("id");t?DBHelper.fetchOneRestaurant(t,(n,a)=>{self.restaurant=a,a?(fillRestaurantHTML(),e(null,a),DBHelper.fetchOneRestaurantReviews(t,(e,t)=>{self.restaurant.reviews=t,fillReviewsHTML()})):console.error(n)}):(error="No restaurant id in URL",e(error,null))}),fillRestaurantHTML=((e=self.restaurant)=>{const t=document.getElementById("restaurant-name");t.setAttribute("tabindex","0"),t.innerHTML=e.name+"&emsp;&emsp;&emsp;&emsp;&emsp;"+("true"===e.is_favorite?"[Favorite]":"[Not favorite]");const n=document.getElementById("restaurant-address");n.setAttribute("tabindex","0"),n.innerHTML=e.address;const a=document.getElementById("restaurant-img");a.className="restaurant-img",a.srcset=DBHelper.imageSrcSetUrlForRestaurant(e),a.sizes=DBHelper.imageSizesUrlForRestaurant(e),a.src=DBHelper.imageSrcUrlForRestaurant(e),a.alt=DBHelper.imageAltDescForRestaurant(e),document.getElementById("restaurant-cuisine").innerHTML=e.cuisine_type,e.operating_hours&&fillRestaurantHoursHTML()}),updateRestaurantTitleHTML=(e=>{const t=document.getElementById("restaurant-name"),n=self.restaurant;t.innerHTML=n.name+"&emsp;&emsp;&emsp;&emsp;&emsp;"+("true"===n.is_favorite?"[Favorite]":"[Not favorite]")}),fillRestaurantHoursHTML=((e=self.restaurant.operating_hours)=>{const t=document.getElementById("restaurant-hours");t.setAttribute("tabindex","0");for(let n in e){const a=document.createElement("tr"),r=document.createElement("td");r.innerHTML=n,a.appendChild(r);const s=document.createElement("td");s.innerHTML=e[n],a.appendChild(s),t.appendChild(a)}}),fillReviewsHTML=((e=self.restaurant.reviews)=>{const t=document.getElementById("reviews-container"),n=document.createElement("h4");n.innerHTML="Reviews";const a=document.createElement("a");if(a.innerHTML="Add Review",a.href="javascript:%20div_show()",a.setAttribute("aria-label","add review"),a.setAttribute("role","button"),a.setAttribute("tabindex","0"),n.append(a),t.appendChild(n),!e){const e=document.createElement("p");return e.innerHTML="No reviews yet!",void t.appendChild(e)}const r=document.getElementById("reviews-list");e.forEach(e=>{r.appendChild(createReviewHTML(null,e))}),t.appendChild(r)}),addReviewsHTMLOffline=((e,t,n,a)=>{document.getElementById("reviews-list").insertBefore(createReviewHTML(null,{name:e,rating:t,comments:n,updatedAt:0,uuid:a}),null)}),addReviewsHTML=(e=>{document.getElementById("reviews-list").insertBefore(createReviewHTML(null,e),null)}),updateReviewsHTMLOffline=((e,t,n,a,r)=>{console.log("Updating uuid: "+a);for(var s=document.getElementById("reviews-list").getElementsByTagName("li"),i=0;i<s.length;++i)s[i].getAttribute("uuid")==a&&createReviewHTML(s[i],{name:e,rating:t,comments:n,updatedAt:r})}),createReviewHTML=((e,t)=>{var n=e;if(null==e)n=document.createElement("li");else for(;n.firstChild;)n.removeChild(n.firstChild);n.setAttribute("tabindex","0"),t.hasOwnProperty("uuid")&&n.setAttribute("uuid",t.uuid);const a=document.createElement("p");a.innerHTML=t.name,n.appendChild(a);const r=document.createElement("p");0!=t.updatedAt?(dateTime=new Date(t.updatedAt),r.innerHTML=dateTime.toString()):r.innerHTML="Not yet updated at the Server",n.appendChild(r);const s=document.createElement("p");s.innerHTML=`Rating: ${t.rating}`,n.appendChild(s);const i=document.createElement("p");return i.innerHTML=escapeUnicode(t.comments),n.appendChild(i),n}),fillBreadcrumb=((e=self.restaurant)=>{const t=document.getElementById("breadcrumb");t.setAttribute("aria-label","breadcrumb"),t.setAttribute("role","navigation");const n=document.createElement("li");n.innerHTML=e.name,t.appendChild(n)}),getParameterByName=((e,t)=>{t||(t=window.location.href),e=e.replace(/[\[\]]/g,"\\$&");const n=new RegExp(`[?&]${e}(=([^&#]*)|&|#|$)`).exec(t);return n?n[2]?decodeURIComponent(n[2].replace(/\+/g," ")):"":null});